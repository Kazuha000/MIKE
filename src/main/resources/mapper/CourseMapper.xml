<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqupt.mike.dao.CourseMapper">
    <resultMap id="BaseResultMap" type="com.cqupt.mike.entity.Course">
        <id column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="course_intro" jdbcType="VARCHAR" property="courseIntro"/>
        <result column="teacher_id" jdbcType="BIGINT" property="teacherId"/>
        <result column="course_category_id" jdbcType="BIGINT" property="courseCategoryId"/>
        <result column="course_video" jdbcType="VARCHAR" property="courseVideo"/>
        <result column="course_cover_img" jdbcType="VARCHAR" property="courseCoverImg"/>
        <result column="course_carousel" jdbcType="VARCHAR" property="courseCarousel"/>
        <result column="original_price" jdbcType="INTEGER" property="originalPrice"/>
        <result column="selling_price" jdbcType="INTEGER" property="sellingPrice"/>
        <result column="stock_num" jdbcType="INTEGER" property="stockNum"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="course_sell_status" jdbcType="TINYINT" property="courseSellStatus"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cqupt.mike.entity.Course">
        <result column="course_detail_content" jdbcType="LONGVARCHAR" property="courseDetailContent"/>
    </resultMap>
    <insert id="insertSelective" parameterType="com.cqupt.mike.entity.Course">
        insert into course_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null">
                course_id,
            </if>
            <if test="courseName != null">
                course_name,
            </if>
            <if test="courseIntro != null">
                course_intro,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="courseCategoryId != null">
                course_category_id,
            </if>
            <if test="courseVideo != null">
                course_video,
            </if>
            <if test="courseCoverImg != null">
                course_cover_img,
            </if>
            <if test="courseCarousel != null">
                course_carousel,
            </if>
            <if test="originalPrice != null">
                original_price,
            </if>
            <if test="sellingPrice != null">
                selling_price,
            </if>
            <if test="stockNum != null">
                stock_num,
            </if>
            <if test="tag != null">
                tag,
            </if>
            <if test="courseSellStatus != null">
                course_sell_status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="courseDetailContent != null">
                course_detail_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="courseName != null">
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="courseIntro != null">
                #{courseIntro,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="courseCategoryId != null">
                #{courseCategoryId,jdbcType=BIGINT},
            </if>
            <if test="courseVideo != null">
                #{courseVideo,jdbcType=VARCHAR},
            </if>
            <if test="courseCoverImg != null">
                #{courseCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="courseCarousel != null">
                #{courseCarousel,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                #{tag,jdbcType=VARCHAR},
            </if>
            <if test="courseSellStatus != null">
                #{courseSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="courseDetailContent != null">
                #{courseDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.cqupt.mike.entity.Course">
        update course_info
        <set>
            <if test="courseName != null">
                course_name = #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="courseIntro != null">
                course_intro = #{courseIntro,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="courseCategoryId != null">
                course_category_id = #{courseCategoryId,jdbcType=BIGINT},
            </if>
            <if test="courseVideo != null">
                course_video = #{courseVideo,jdbcType=VARCHAR},
            </if>
            <if test="courseCoverImg != null">
                course_cover_img = #{courseCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="courseCarousel != null">
                course_carousel = #{courseCarousel,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                original_price = #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                selling_price = #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                stock_num = #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
            <if test="courseSellStatus != null">
                course_sell_status = #{courseSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="courseDetailContent != null">
                course_detail_content = #{courseDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where course_id = #{courseId,jdbcType=BIGINT}
    </update>

    <select id="findCourseList" parameterType="Map" resultMap="BaseResultMap">
        select *
<!--        <include refid="Base_Column_List"/>-->
        from course_info
        order by course_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="findCourseListByTeacherId"  resultMap="BaseResultMap">
        select *
        <!--        <include refid="Base_Column_List"/>-->
        from course_info
        where teacher_id=#{teacherId}
        order by course_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="findCourseListBySearch" parameterType="Map" resultMap="BaseResultMap">
        select *
<!--        <include refid="Base_Column_List"/>-->
        from course_info
        <where>
            <if test="keyword!=null and keyword!=''">
                and (course_name like CONCAT('%',#{keyword},'%') or course_intro like CONCAT('%',#{keyword},'%'))
            </if>
            <if test="courseCategoryId!=null and courseCategoryId!=''">
                and course_category_id = #{courseCategoryId}
            </if>
            <if test="courseSellStatus!=null">
                and course_sell_status = #{courseSellStatus}
            </if>
        </where>
        <if test="orderBy!=null and orderBy!=''">
            <choose>
                <when test="orderBy == 'new'">
                    <!-- 按照发布时间倒序排列 -->
                    order by course_id desc
                </when>
                <when test="orderBy == 'price'">
                    <!-- 按照售价从小到大排列 -->
                    order by selling_price asc
                </when>
                <otherwise>
                    <!-- 默认按照库存数量从大到小排列 -->
                    order by stock_num desc
                </otherwise>
            </choose>
        </if>
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="getTotalCourseBySearch" parameterType="Map" resultType="int">
        select count(*) from course_info
        <where>
            <if test="keyword!=null and keyword!=''">
                and (course_name like CONCAT('%',#{keyword},'%') or course_intro like CONCAT('%',#{keyword},'%'))
            </if>
            <if test="courseCategoryId!=null and courseCategoryId!=''">
                and course_category_id = #{courseCategoryId}
            </if>
            <if test="courseSellStatus!=null">
                and course_sell_status = #{courseSellStatus}
            </if>
        </where>
    </select>

    <select id="getTotalCourse" parameterType="Map" resultType="int">
        select count(*) from course_info
    </select>

    <update id="batchUpdateSellStatus">
        update course_info
        set course_sell_status=#{sellStatus},update_time=now() where course_info.course_id in
        <foreach item="id" collection="courseIds" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from course_info
        where course_id = #{courseId,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
        select *
        from course_info
        where course_id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by field(course_id,
        <foreach item="id" collection="list" separator=",">
            #{id}
        </foreach>
        );
    </select>

    <select id="selectByCategoryIdAndName" resultMap="BaseResultMap">
        select *
        from course_info
        where course_name = #{courseName,jdbcType=VARCHAR} and course_category_id = #{courseCategoryId,jdbcType=BIGINT}
    </select>
</mapper>
